#
# Autogenerated by Thrift Compiler (0.9.1)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#

require 'thrift'
require 'scrapper_types'

module Scrapper
  class Client
    include ::Thrift::Client

    def scrape(url)
      send_scrape(url)
      return recv_scrape()
    end

    def send_scrape(url)
      send_message('scrape', Scrape_args, :url => url)
    end

    def recv_scrape()
      result = receive_message(Scrape_result)
      return result.success unless result.success.nil?
      raise ::Thrift::ApplicationException.new(::Thrift::ApplicationException::MISSING_RESULT, 'scrape failed: unknown result')
    end

  end

  class Processor
    include ::Thrift::Processor

    def process_scrape(seqid, iprot, oprot)
      args = read_args(iprot, Scrape_args)
      result = Scrape_result.new()
      result.success = @handler.scrape(args.url)
      write_result(result, oprot, 'scrape', seqid)
    end

  end

  # HELPER FUNCTIONS AND STRUCTURES

  class Scrape_args
    include ::Thrift::Struct, ::Thrift::Struct_Union
    URL = 1

    FIELDS = {
      URL => {:type => ::Thrift::Types::STRING, :name => 'url'}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class Scrape_result
    include ::Thrift::Struct, ::Thrift::Struct_Union
    SUCCESS = 0

    FIELDS = {
      SUCCESS => {:type => ::Thrift::Types::STRUCT, :name => 'success', :class => ::Blog}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

end

